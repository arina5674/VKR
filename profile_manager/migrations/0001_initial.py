# Generated by Django 5.1.4 on 2025-02-09 09:36

import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='Описание')),
                ('address', models.CharField(blank=True, max_length=150, verbose_name='Адрес')),
                ('image', models.CharField(default='default.png', max_length=100, verbose_name='Изображение')),
                ('dt_birthday', models.DateField(null=True, verbose_name='Дата рождения')),
                ('status', models.CharField(blank=True, max_length=150, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Название города')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Подтверждено')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile_manager.customuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
            },
        ),
        migrations.CreateModel(
            name='InterestingFact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300, verbose_name='Текст интересного факта')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profile_manager.customuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Интересный факт',
                'verbose_name_plural': 'Интересные факты',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='town',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='profile_manager.town', verbose_name='Город'),
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название учебного заведения')),
                ('address', models.CharField(blank=True, max_length=150, verbose_name='Адрес')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='profile_manager.town', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Учебное заведение',
                'verbose_name_plural': 'Учебные заведения',
                'unique_together': {('name', 'town')},
            },
        ),
    ]
